# Copyright (c) 2025 Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.


#--------------------------------------------------------------------------------------------------------------------------------------
# This Example is for creating Exadata Cloud Infrastructure, Multiple VM Clusters using different VCNs with multiple Database Homes with Multiple Container Databases (CDBs) and Pluggable Databases (PDBs) 
# 1. Rename this file to <project-name>.auto.tfvars, where <project-name> is a name of your choice.
# 2. Provide values for "Tenancy Connectivity Variables".
# 3. Replace <REPLACE-BY-*> placeholders with appropriate values.
#--------------------------------------------------------------------------------------------------------------------------------------

#---------------------------------------
# Tenancy Connectivity Variables
#---------------------------------------

tenancy_ocid         = "<REPLACE-WITH-TENANCY-OCID>" # Get this from OCI Console (after logging in, go to top-right-most menu item and click option "Tenancy: <your tenancy name>").
user_ocid            = "<REPLACE-WITH-USER-OCID>"    # Get this from OCI Console (after logging in, go to top-right-most menu item and click option "My profile").
fingerprint          = "<REPLACE-WITH-FINGERPRINT>"   # The fingerprint can be gathered from your user account. In the "My profile page, click "API keys" on the menu in left hand side.
private_key_path     = "<REPLACE-WITH-PRIVATE-KEY-PATH>"  # This is the full path on your local system to the API signing private key.
private_key_password = ""                                  # This is the password that protects the private key, if any.
region               = "<REPLACE-WITH-REGION>"             # The region name.

#---------------------------------------
# Input variable
#---------------------------------------
compartments_dependency = {
  CMP-1 = {
    id = "<REPLACE-WITH-DEFAULT-COMPARTMENT-OCID>"
  }
}

network_dependency = {
  network_security_groups = {
    "NSG-EXA-CLIENT-KEY-1" = { id = "<REPLACE-WITH-NSG-OCID>" }
    "NSG-EXA-BACKUP-KEY-1" = { id = "<REPLACE-WITH-NSG-OCID>" }
    "NSG-EXA-CLIENT-KEY-2" = { id = "<REPLACE-WITH-NSG-OCID>" }
    "NSG-EXA-BACKUP-KEY-2" = { id = "<REPLACE-WITH-NSG-OCID>" }
  }
  subnets = {
    "EXA-SUBNET-KEY-1"        = { id = "<REPLACE-WITH-SUBNET-OCID>" }
    "EXA-BACKUP-SUBNET-KEY-1" = { id = "<REPLACE-WITH-SUBNET-OCID>" }
    "EXA-SUBNET-KEY-2"        = { id = "<REPLACE-WITH-SUBNET-OCID>" }
    "EXA-BACKUP-SUBNET-KEY-2" = { id = "<REPLACE-WITH-SUBNET-OCID>" }
  }
}

default_compartment_id = "CMP-1"
default_freeform_tags  = {}
default_defined_tags   = {}

cloud_exadata_infrastructures_configuration = {
  default_maintenance_window = {
    preference                    = "NO_PREFERENCE"
    months                        = ["JANUARY"]
    weeks_of_month                = [2]
    days_of_week                  = ["Monday"]
    hours_of_day                  = [0, 4]
  }

  cloud_exadata_infrastructures = {
    "My-Exadata-Infra-1" = {
      display_name = "My-Exadata-Infra-1"
      shape        = "Exadata.X11M"

      compute_count = 2
      storage_count = 3
      customer_contacts = {
        email = "example2@oracle.com"
      }
      customer_contacts = {
        email = "example2@oracle.com"
      }
      database_server_type = "X11M"
      maintenance_window = {
        preference                       = "CUSTOM_PREFERENCE"
        is_custom_action_timeout_enabled = false
        custom_action_timeout_in_mins    = 20
        days_of_week                     = ["MONDAY"]
        hours_of_day                     = [2]
        lead_time_in_weeks               = 2
        months                           = ["FEBRUARY", "MAY", "AUGUST", "NOVEMBER"]
        weeks_of_month                   = [1]
        pathing_mode                     = "ROLLING"
      }

      storage_server_type = "X11M-HC"
    }
  }
}


cloud_vm_clusters_configuration = {

  # ----------------------------
  # This is to create the first VM Cluster 
  # ----------------------------

  MY-VM-CLUSTER-1 = {
    compartment_id            = "CMP-1"
    display_name              = "MY-VM-Cluster-1"
    exadata_infrastructure_id = "My-Exadata-Infra-1"
    db_servers                = ["ALL"]

    # ---- networking----
    subnet_id              = "EXA-SUBNET-KEY-1"        ## "ocid1.subnet.oc1.."
    backup_subnet_id       = "EXA-BACKUP-SUBNET-KEY-1" ## "ocid1.subnet.oc1.."
    nsg_ids                = ["NSG-EXA-CLIENT-KEY-1"]
    backup_network_nsg_ids = ["NSG-EXA-BACKUP-KEY-1"]

    # ---- sizing ----
    memory_size_in_gbs          = 60
    db_node_storage_size_in_gbs = 120
    data_storage_size_in_tbs    = 2
    cpu_core_count              = 16

    scan_listener_port_tcp     = 1521
    scan_listener_port_tcp_ssl = 2484

    is_local_backup_enabled     = true
    is_sparse_diskgroup_enabled = true

    # ---- software & identity ----
    gi_version      = "23.0.0.0"
    system_version  = "25.1.6.0.0.250622"
    hostname        = "abc"
    cluster_name    = "clust01"
    ssh_public_keys = ["<REPLACE-WITH-SSH-PUBLIC-KEY>"]
    license_model   = "LICENSE_INCLUDED"

    # ---- optional extras ----
    is_local_backup_enabled = true
    time_zone               = "UTC"

    # ================================
    # Automation update Details
    # ================================
    cloud_automation_update_details = {
      #Optional
      apply_update_time_preference = {
        apply_update_preferred_end_time   = "06:00"
        apply_update_preferred_start_time = "00:00"
      }
      freeze_period = {
        freeze_period_end_time   = "2025-10-05"
        freeze_period_start_time = "2025-10-01"
      }
      is_early_adoption_enabled = false
      is_freeze_period_enabled  = true
    }

    # Data Collection options
    data_collection_options = {
      is_diagnostics_events_enabled = false
      is_health_monitoring_enabled  = false
      is_incident_logs_enabled      = false
    }

    # file system config
    file_system_configuration_details = {
      "U01" = {
        file_system_size_gb = 20
        mount_point         = "/u01"
      },
      "HOME" = {
        file_system_size_gb = 4
        mount_point         = "/home"
      }
      "VAR" = {
        file_system_size_gb = 5
        mount_point         = "/var"
      }
    }
  }

  # ----------------------------
  # This is to create the second VM Cluster using a different VCN 
  # ----------------------------

  MY-VM-CLUSTER-2 = {
    compartment_id            = "CMP-1"
    display_name              = "VMCluster2"
    exadata_infrastructure_id = "My-Exadata-Infra-1"
    db_servers                = ["ALL"]

    # ---- networking----
    subnet_id              = "EXA-SUBNET-KEY-2"        ## "ocid1.subnet.oc1.." replace with client subnet OCID from VCN2
    backup_subnet_id       = "EXA-BACKUP-SUBNET-KEY-2" ## "ocid1.subnet.oc1.." replace with backup subnet OCID from VCN2
    nsg_ids                = ["NSG-EXA-CLIENT-KEY-2"]
    backup_network_nsg_ids = ["NSG-EXA-BACKUP-KEY-2"]

    # ---- sizing ----
    memory_size_in_gbs          = 60
    db_node_storage_size_in_gbs = 120
    data_storage_size_in_tbs    = 2
    cpu_core_count              = 16

    scan_listener_port_tcp     = 1521
    scan_listener_port_tcp_ssl = 2484

    is_local_backup_enabled     = true
    is_sparse_diskgroup_enabled = true

    # ---- software & identity ----
    gi_version      = "19.27.0.0.0"
    gi_version      = "23.0.0.0"
    system_version  = "25.1.6.0.0.250622"
    hostname        = "abc"
    cluster_name    = "clust02"
    ssh_public_keys = ["<REPLACE-WITH-SSH-PUBLIC-KEY>"]
    license_model   = "LICENSE_INCLUDED"

    # ---- optional extras ----
    is_local_backup_enabled = true
    time_zone               = "UTC"

    # ================================
    # Automation update Details
    # ================================
    cloud_automation_update_details = {
      #Optional
      apply_update_time_preference = {
        apply_update_preferred_end_time   = "06:00"
        apply_update_preferred_start_time = "00:00"
      }
      freeze_period = {
        freeze_period_end_time   = "2025-10-05"
        freeze_period_start_time = "2025-10-01"
      }
      is_early_adoption_enabled = false
      is_freeze_period_enabled  = true
    }

    # Data Collection options
    data_collection_options = {
      is_diagnostics_events_enabled = false
      is_health_monitoring_enabled  = false
      is_incident_logs_enabled      = false
    }

    # file system config
    file_system_configuration_details = {
      "U01" = {
        file_system_size_gb = 20
        mount_point         = "/u01"
      },
      "HOME" = {
        file_system_size_gb = 4
        mount_point         = "/home"
      }
      "VAR" = {
        file_system_size_gb = 5
        mount_point         = "/var"
      }
    }
  }
}



cloud_db_homes_configuration = {
  "DB-HOME-1" = {
    # ----------------------------
    # This is to create the first Database Home in VM Cluster1 
    # ----------------------------
    vm_cluster_id = "MY-VM-CLUSTER-1" # required if source = VM_CLUSTER_NEW, replace with the OCID of VM Cluster1
    display_name  = "MyDBHome1"
    db_version    = "19.0.0.0"
    description   = "DB Home Config"  # optional
    source        = "VM_CLUSTER_NEW"  # optional (default = VM_CLUSTER_NEW)
    defined_tags  = {}                # optional
    freeform_tags = { "env" = "dev" } # optional
  }

  "DB-HOME-2" = {
    # ----------------------------
    # This is to create the second Database Home in VM Cluster1 
    # ----------------------------
    vm_cluster_id = "MY-VM-CLUSTER-1" # required if source = VM_CLUSTER_NEW, replace with the OCID of VM Cluster1
    display_name  = "MyDBHome2"
    db_version    = "19.0.0.0"
    description   = "DB Home Config"  # optional
    source        = "VM_CLUSTER_NEW"  # optional (default = VM_CLUSTER_NEW)
    defined_tags  = {}                # optional
    freeform_tags = { "env" = "dev" } # optional
  }

}

# ---------------------------------------
# This is to create multiple Container Database(s) and Pluggable Database(s)
# ---------------------------------------
# The strong admin_password below satisfies the policy defined in variables.tf:
# - Length 9-30, at least 2 uppercase, 2 lowercase, 2 digits, 2 special chars from _, #, -
# - Only allowed characters, and must not contain 'oracle' (or reverse), 'sys', 'system', 'metsys'
databases_configuration = {

  # ----------------------------
  # This is to create the CDB1 and PDB1A in DBHome1 
  # ----------------------------
  CDB1 = {
    #Required
    source     = "NONE"
    db_home_id = "DB-HOME-1" # References the DB Home defined above (or a DB Home OCID)
    database = {
      # Required
      admin_password = "<REPLACE-WITH-STRONG-PASSWORD>"
      db_name        = "CDB1"

      #optional
      character_set = "AL32UTF8"
      db_backup_config = {
        auto_backup_enabled     = "true"
        auto_backup_window      = "SLOT_ONE" #<<If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen.>>
        auto_full_backup_day    = "SUNDAY"   #<<If no option is selected, the value is null and we will default to Sunday.>>
        auto_full_backup_window = "SLOT_TWO" #<<If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen.>>
        backup_deletion_policy  = "DELETE_AFTER_RETENTION_PERIOD"

        recovery_window_in_days   = "35" #<<recoveryWindow cannot have value for Backup destination as Database Recovery System.>
        run_immediate_full_backup = "false"
      }
      db_unique_name = "CDB1_vp_fra"
      db_workload    = "OLTP"
      defined_tags   = {}
      freeform_tags  = {}
      ncharacter_set = "AL16UTF16" #The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.

      # Create initial PDB during CDB creation
      pdb_name            = "PDB1A" #The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
      sid_prefix          = "cdb1"
      tde_wallet_password = "<REPLACE-WITH-STRONG-PASSWORD>"
    }
  }

  CDB2 = {
    # ----------------------------
    # This is to create the CDB2 and PDB2A in DBHome1 
    # ----------------------------
    #Required
    source     = "NONE"
    db_home_id = "DB-HOME-1" # References the DB Home defined above (or a DB Home OCID)
    database = {
      # Required
      admin_password = "<REPLACE-WITH-STRONG-PASSWORD>"
      db_name        = "CDB2"

      #optional
      character_set = "AL32UTF8"

      db_backup_config = {
        auto_backup_enabled     = "true"
        auto_backup_window      = "SLOT_ONE" #<<If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen.>>
        auto_full_backup_day    = "SUNDAY"   #<<If no option is selected, the value is null and we will default to Sunday.>>
        auto_full_backup_window = "SLOT_TWO" #<<If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen.>>
        backup_deletion_policy  = "DELETE_AFTER_RETENTION_PERIOD"

        recovery_window_in_days   = "35" #<<recoveryWindow cannot have value for Backup destination as Database Recovery System.>
        run_immediate_full_backup = "false"
      }
      db_unique_name = "CDB2_vp_fra"
      db_workload    = "OLTP"
      defined_tags   = {}

      freeform_tags  = {}
      ncharacter_set = "AL16UTF16" #The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.

      # Create initial PDB during CDB creation
      pdb_name            = "PDB2A" #The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
      sid_prefix          = "cdb2"
      tde_wallet_password = "<REPLACE-WITH-STRONG-PASSWORD>"
    }
  }

  CDB3 = {
    # ----------------------------
    # This is to create the CDB3 and PDB3A in DBHome2 
    # ----------------------------
    #Required
    source     = "NONE"
    db_home_id = "DB-HOME-2" # References the DB Home defined above (or a DB Home OCID)
    database = {
      # Required
      admin_password = "<REPLACE-WITH-STRONG-PASSWORD>"
      db_name        = "CDB3"

      #optional
      character_set = "AL32UTF8"
      db_backup_config = {
        auto_backup_enabled       = "true"
        auto_backup_window        = "SLOT_ONE" #<<If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen.>>
        auto_full_backup_day      = "SUNDAY"   #<<If no option is selected, the value is null and we will default to Sunday.>>
        auto_full_backup_window   = "SLOT_TWO" #<<If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen.>>
        backup_deletion_policy    = "DELETE_AFTER_RETENTION_PERIOD"
        recovery_window_in_days   = "35" #<<recoveryWindow cannot have value for Backup destination as Database Recovery System.>
        run_immediate_full_backup = "false"
      }
      db_unique_name = "CDB3_vp_fra"
      db_workload    = "OLTP"
      defined_tags   = {}

      freeform_tags  = {}
      ncharacter_set = "AL16UTF16" #The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.

      # Create initial PDB during CDB creation
      pdb_name            = "PDB3A" #The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
      sid_prefix          = "cdb3"
      tde_wallet_password = "<REPLACE-WITH-STRONG-PASSWORD>"
    }
  }

  CDB4 = {
    # ----------------------------
    # This is to create the CDB4 and PDB4A in DBHome2 
    # ----------------------------
    #Required
    source     = "NONE"
    db_home_id = "DB-HOME-2" # References the DB Home defined above (or a DB Home OCID)
    database = {
      # Required
      admin_password = "<REPLACE-WITH-STRONG-PASSWORD>"
      db_name        = "CDB4"

      #optional
      character_set = "AL32UTF8"
      db_backup_config = {
        auto_backup_enabled     = "true"
        auto_backup_window      = "SLOT_ONE" #<<If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen.>>
        auto_full_backup_day    = "SUNDAY"   #<<If no option is selected, the value is null and we will default to Sunday.>>
        auto_full_backup_window = "SLOT_TWO" #<<If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen.>>
        backup_deletion_policy  = "DELETE_AFTER_RETENTION_PERIOD"

        recovery_window_in_days   = "35" #<<recoveryWindow cannot have value for Backup destination as Database Recovery System.>
        run_immediate_full_backup = "false"
      }
      db_unique_name = "CDB4_vp_fra"
      db_workload    = "OLTP"
      defined_tags   = {}

      freeform_tags  = {}
      ncharacter_set = "AL16UTF16" #The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.

      # Create initial PDB during CDB creation
      pdb_name            = "PDB4A" #The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
      sid_prefix          = "cdb4"
      tde_wallet_password = "<REPLACE-WITH-STRONG-PASSWORD>"
    }

  }
}


# ---------------------------------------
# This is to create additional PDB(s) 
# ---------------------------------------
pluggable_databases_configuration = {

  # ---------------------------------------
  # the is to create additional PDB(s) in CDB1
  # ---------------------------------------
  PDB1B = {
    container_database_id = "CDB1"  #<<Name or OCID>>
    pdb_name              = "PDB1B" #The name for the pluggable database (PDB). The name is unique in the context of a container database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
    pdb_admin_password    = "<REPLACE-WITH-STRONG-PASSWORD>"

    should_create_pdb_backup           = "false"
    should_pdb_admin_account_be_locked = "false"
    tde_wallet_password                = "<REPLACE-WITH-STRONG-PASSWORD>" #The existing TDE wallet password of the CDB.
  }

  # ---------------------------------------
  # the is to create additional PDB(s) in CDB2
  # ---------------------------------------
  PDB2B = {
    container_database_id = "CDB2"  #<<Name or OCID>>
    pdb_name              = "PDB2B" #The name for the pluggable database (PDB). The name is unique in the context of a container database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
    pdb_admin_password    = "<REPLACE-WITH-STRONG-PASSWORD>"

    should_create_pdb_backup           = "false"
    should_pdb_admin_account_be_locked = "false"
    tde_wallet_password                = "<REPLACE-WITH-STRONG-PASSWORD>" #The existing TDE wallet password of the CDB.
  }

  # ---------------------------------------
  # the is to create additional PDB(s) in CDB3
  # ---------------------------------------
  PDB3B = {
    container_database_id = "CDB3"  #<<Name or OCID>>
    pdb_name              = "PDB3B" #The name for the pluggable database (PDB). The name is unique in the context of a container database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
    pdb_admin_password    = "<REPLACE-WITH-STRONG-PASSWORD>"

    should_create_pdb_backup           = "false"
    should_pdb_admin_account_be_locked = "false"
    tde_wallet_password                = "<REPLACE-WITH-STRONG-PASSWORD>" #The existing TDE wallet password of the CDB.
  }

  # ---------------------------------------
  # the is to create additional PDB(s) in CDB4
  # ---------------------------------------
  PDB4B = {
    container_database_id = "CDB4"  #<<Name or OCID>>
    pdb_name              = "PDB4B" #The name for the pluggable database (PDB). The name is unique in the context of a container database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
    pdb_admin_password    = "<REPLACE-WITH-STRONG-PASSWORD>"

    should_create_pdb_backup           = "false"
    should_pdb_admin_account_be_locked = "false"
    tde_wallet_password                = "<REPLACE-WITH-STRONG-PASSWORD>" #The existing TDE wallet password of the CDB.
  }

}

